[package]
name = "l402-server-example-rs"
version = "0.1.0"
edition = "2024"
description = "A Rust implementation of the L402 payment system for API paywalls"
authors = ["Abdel <@AbdelStark>"]

[dependencies]
# Web framework
axum = { version = "0.8", features = ["macros"] }
tower = { version = "0.4", features = ["limit"] }
tower-http = { version = "0.5", features = ["trace", "cors", "limit"] }

# Async runtime
tokio = { version = "1.35", features = ["full"] }

# HTTP client
reqwest = { version = "0.11", features = ["json"] }

# Redis client
redis = { version = "0.24", features = ["tokio-comp", "connection-manager"] }
deadpool-redis = "0.14"

# JSON/Serialization
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

# UUID generation
uuid = { version = "1.6", features = ["v4", "serde"] }

# Date/Time handling
chrono = { version = "0.4", features = ["serde"] }

# Logging/Tracing
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Error handling
thiserror = "1.0"
anyhow = "1.0"

# Crypto/HMAC
sha2 = "0.10"
hmac = "0.12"
hex = "0.4"

# Static initialization
once_cell = "1.19"

# Environment variables
dotenvy = "0.15.7"
